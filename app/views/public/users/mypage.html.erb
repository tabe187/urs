<h1>Public::Users#show</h1>
<%= link_to @user.name, user_path(@user.id)%>さんのページ
<%= link_to "登録内容を編集する", edit_user_path(@user.id) %><br>

<head>

<body>

コミュニティ<br>
<% @user.communities.each do |community| %>
  <% if community.community_image.attached? %>
    <%= link_to community_path(community.id) do %>
       <%= image_tag community.get_community_image(50,50) %>
    <% end %><br>
  <% else %>
    <%= image_tag 'no_image', size: "50x50" %>
  <% end %>
<% end %><br>

コメント履歴<br>
<% @user.comments.each do |comment| %>
<%= link_to comment.topic.title, community_topic_path(comment.topic.community.id, comment.topic.id) %><br>

<% end %><br>

お気に入り<br>
<% @user.favorites.each do |favorite| %>
<div onClick='getFavoriteAddresss(<%= favorite.map.latitude %>, <%= favorite.map.longitude %>)' >

<%= link_to favorite.map.place_name, "#map" %>
(<%= favorite.map.address.match(/^.{2,3}[市区町村]/).to_s %>)<br>
<% if favorite.map.types == "restaurant" %>
    レストラン
  <% elsif favorite.map.types == "park" %>
    公園
  <% elsif favorite.map.types == "bar" %>
    バー
  <% elsif favorite.map.types == "night_club" %>
    ナイトクラブ
  <% elsif favorite.map.types == "clothing_store" %>
   洋服店
  <% elsif favorite.map.types == "cafe" %>
    カフェ
  <% elsif favorite.map.types == "hotel" %>
    ホテル
  <% elsif favorite.map.types == "hot_spring" %>
    温泉
  <% else %>
    その他
<% end %>



</div>
<% end %><br>


---------------------------------------------------------------------------------------<br>
<div id="map" style="width:500px;height:600px;"></div>
<button id='getCurrentAddressBtn' onClick='getCurrentAddress()'>
    get current address
</button>
<div id='result'>
</div>


<script>
//　1.現在地の緯度経度を取得する
//　2.取得した緯度経度情報をもとに赤いぴんを地図に表示する
//　3.取得した住所(緯度経度?)をDB
function initMap(){
  let map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: 35.658, lng: 139.701},
  zoom: 15
  });
}

function getFavoriteAddresss(latitude, longitude) {
  function successCallback(position) {
      console.log(latitude)
      console.log(longitude)

      const latlng = new google.maps.LatLng(latitude, longitude);
      let map = new google.maps.Map(document.getElementById('map'), {
          center: latlng,
          zoom: 15,
      });
      console.log(latlng)
      console.log(map)

      new google.maps.Marker({
          map: map,
          position: latlng,
      })


  }

  function errorCallback() {
      const result = document.getElementById('result');
      result.innerHTML = '座標取得できませんでした'
  }
  navigator.geolocation.getCurrentPosition(successCallback, errorCallback);

}


function getCurrentAddress() {
  function successCallback(position) {
      const latitude = position.coords.latitude;
      const longitude = position.coords.longitude;
      console.log(latitude)
      console.log(longitude)

      const latlng = new google.maps.LatLng(latitude, longitude);
      let map = new google.maps.Map(document.getElementById('map'), {
          center: latlng,
          zoom: 15,
      });
      console.log(latlng)
      console.log(map)

      new google.maps.Marker({
          map: map,
          position: latlng,
      })
  }
  function errorCallback() {
      const result = document.getElementById('result');
      result.innerHTML = '座標取得できませんでした'
  }
  navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
}



</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap&libraries=places" async defer></script>
</body>